[DBG] init.logger          initiated logger settings
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/libs/commands.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/libs/commands.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/libs/commands.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/libs/commands.sh' with 0 args []
[DBG] status.loader        saving 'libs:commands' as loaded module
[DBG] argument.base        checking input: '_options'
[DBG] argument.base        add '_options' as arguments
[DBG] argument.base        checking input: '--land'
[DBG] argument.base        add '--land' as arguments
[DBG] load.commands        current filename is '--land'
[DBG] load.commands        skipped because options cannot be filename (--land)
[DBG] load.commands        current filename is '_options'
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/commands/_options.sh'
[DBG] shell.loader         run '$KCT_PATH_TESTDIR/commands/_options.sh' using 'bash' with 1 args [--land]
[DBG] init.logger          initiated logger settings
[DBG] command.lib          start 'options' command with 1 args [--land]
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/private/_environment.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/private/_environment.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/private/_environment.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/private/_environment.sh' with 0 args []
[DBG] status.loader        saving 'private:environment' as loaded module
[DBG] success-cb.loader    found init function of 'private:environment' with []
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/configs/.env'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/configs/.env'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/configs/.env'
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/private/_lifecycle.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/private/_lifecycle.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/private/_lifecycle.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/private/_lifecycle.sh' with 2 args [options --land]
[DBG] status.loader        saving 'private:lifecycle' as loaded module
[DBG] success-cb.loader    found init function of 'private:lifecycle' with [options --land]
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/libs/hooks.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/libs/hooks.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/libs/hooks.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/libs/hooks.sh' with 0 args []
[DBG] status.loader        saving 'libs:hooks' as loaded module
[DBG] success-cb.loader    found init function of 'libs:hooks' with []
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/libs/functions.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/libs/functions.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/libs/functions.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/libs/functions.sh' with 0 args []
[DBG] status.loader        saving 'libs:functions' as loaded module
[DBG] init.lifecycle       initiate $_KCS_CMD_NAME variable to 'options'
[DBG] add.hooks            adding '__kcs_options_hook_init' with '@optional' to hook name 'pre_init'
[DBG] add.hooks            adding '__kcs_options_hook_main' with '@raw,@varargs' to hook name 'main'
[DBG] add.hooks            adding '__kcs_options_hook_clean' with '@optional' to hook name 'pre_clean'
[DBG] add.hooks            adding '__kcs_environment_hook_clean' to hook name 'clean'
[DBG] add.hooks            adding '__kcs_log_hook_clean' to hook name 'post_clean'
[DBG] add.hooks            adding '__kcs_color_hook_clean' to hook name 'post_clean'
[DBG] success-cb.loader    found start function of 'private:lifecycle' with [options --land]
[DBG] runner.hooks         found 1 callbacks on 'pre_init' hook
[DBG] runner.hooks         using 'kcs_func_optional' for '__kcs_options_hook_init' callback
[DBG] do.loader            checking function name '__kcs_options_hook_init'
[DBG] function.loader      run '__kcs_options_hook_init' function with 0 args []
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/libs/options.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/libs/options.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/libs/options.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/libs/options.sh' with 6 args [l|land; LAND f|flower; FLOWER s|sky <str>; SKY w|water [str]; WATER r|rock [str:paper]; ROCK e|ex|extra; EXTRA]
[DBG] status.loader        saving 'libs:options' as loaded module
[DBG] success-cb.loader    found init function of 'libs:options' with [l|land; LAND f|flower; FLOWER s|sky <str>; SKY w|water [str]; WATER r|rock [str:paper]; ROCK e|ex|extra; EXTRA]
[DBG] init.options         optional options definition: ''
[DBG] init.options         required options definition: 'str'
[DBG] init.options         option value type 'str' and default ''
[DBG] init.options         optional options definition: 'str'
[DBG] init.options         required options definition: ''
[DBG] init.options         option value type 'str' and default ''
[DBG] init.options         optional options definition: 'str:paper'
[DBG] init.options         required options definition: ''
[DBG] init.options         option value type 'str' and default 'paper'
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/libs/information.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/libs/information.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/libs/information.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/libs/information.sh' with 0 args []
[DBG] status.loader        saving 'libs:information' as loaded module
[DBG] success-cb.loader    found init function of 'libs:information' with []
[DBG] add.hooks            adding '__kcs_options_hook_init' with '@raw,@rawargs' to hook name 'post_init'
[DBG] add.hooks            adding '__kcs_options_hook_clean' to hook name 'post_clean'
[DBG] runner.hooks         found 0 callbacks on 'init' hook
[DBG] runner.hooks         found 1 callbacks on 'post_init' hook
[DBG] runner.hooks         using 'kcs_func_must' for '__kcs_options_hook_init' callback
[DBG] do.loader            checking function name '__kcs_options_hook_init'
[DBG] function.loader      run '__kcs_options_hook_init' function with 3 args [--land <> |l|land|:LAND:NV;|f|flower|:FLOWER:NV;|s|sky|:SKY:RS;|w|water|:WATER:OS;|r|rock|:ROCK:OS:paper;|e|ex|extra|:EXTRA:NV;]
[DBG] argument.base        checking input: '--land'
[DBG] argument.base        add '--land' as arguments
[DBG] argument.base        checking input: '<>'
[DBG] argument.base        checking input: '|l|land|:LAND:NV;|f|flower|:FLOWER:NV;|s|sky|:SKY:RS;|w|water|:WATER:OS;|r|rock|:ROCK:OS:paper;|e|ex|extra|:EXTRA:NV;'
[DBG] argument.base        add '|l|land|:LAND:NV;|f|flower|:FLOWER:NV;|s|sky|:SKY:RS;|w|water|:WATER:OS;|r|rock|:ROCK:OS:paper;|e|ex|extra|:EXTRA:NV;' as arguments [raw]
[DBG] hook-init.options    options definition: |l|land|:LAND:NV;|f|flower|:FLOWER:NV;|s|sky|:SKY:RS;|w|water|:WATER:OS;|r|rock|:ROCK:OS:paper;|e|ex|extra|:EXTRA:NV;
[DBG] hook-init.options    parsing short options 'land'
[DBG] runner.hooks         found 0 callbacks on 'pre_main' hook
[DBG] runner.hooks         found 1 callbacks on 'main' hook
[DBG] runner.hooks         using 'kcs_func_must' for '__kcs_options_hook_main' callback
[DBG] do.loader            checking function name '__kcs_options_hook_main'
[DBG] function.loader      run '__kcs_options_hook_main' function with 2 args [options.command --land]
[ERR] exit.base            loading 'func:__kcs_options_hook_main' failed
[DBG] add.hooks            adding '__kcs_exit_hook_finish' with '@varargs' to hook name 'finish'
[DBG] runner.hooks         found 0 callbacks on 'post_main' hook
[DBG] runner.hooks         found 1 callbacks on 'pre_clean' hook
[DBG] runner.hooks         using 'kcs_func_optional' for '__kcs_options_hook_clean' callback
[DBG] do.loader            checking function name '__kcs_options_hook_clean'
[DBG] function.loader      run '__kcs_options_hook_clean' function with 0 args []
[DBG] runner.hooks         found 1 callbacks on 'clean' hook
[DBG] runner.hooks         using 'kcs_func_must' for '__kcs_environment_hook_clean' callback
[DBG] do.loader            checking function name '__kcs_environment_hook_clean'
[DBG] function.loader      run '__kcs_environment_hook_clean' function with 0 args []
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/configs/.env'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/configs/.env'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/configs/.env'
[DBG] runner.hooks         found 3 callbacks on 'post_clean' hook
[DBG] runner.hooks         using 'kcs_func_must' for '__kcs_log_hook_clean' callback
[DBG] do.loader            checking function name '__kcs_log_hook_clean'
[DBG] function.loader      run '__kcs_log_hook_clean' function with 0 args []
[DBG] exit.base            exit instantly because missing hooks
[ERR] exit.base            loading 'commands:_options' failed ($KCT_PATH_TESTDIR/commands/_options.sh)
