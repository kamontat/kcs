[DBG] init.logger          initiated logger settings
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/libs/commands.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/libs/commands.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/libs/commands.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/libs/commands.sh' with 0 args []
[DBG] status.loader        saving 'libs:commands' as loaded module
[DBG] argument.base        checking input: 'loggings'
[DBG] argument.base        add 'loggings' as arguments
[DBG] load.commands        current filename is 'loggings'
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/commands/loggings.sh'
[DBG] shell.loader         run '$KCT_PATH_TESTDIR/commands/loggings.sh' using 'bash' with 0 args []
[DBG] init.logger          initiated logger settings
[DBG] command.lib          start 'loggings' command without args
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/private/_lifecycle.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/private/_lifecycle.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/private/_lifecycle.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/private/_lifecycle.sh' with 1 args [loggings]
[DBG] status.loader        saving 'private:lifecycle' as loaded module
[DBG] success-cb.loader    found init function of 'private:lifecycle' with [loggings]
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/libs/hooks.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/libs/hooks.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/libs/hooks.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/libs/hooks.sh' with 0 args []
[DBG] status.loader        saving 'libs:hooks' as loaded module
[DBG] success-cb.loader    found init function of 'libs:hooks' with []
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/libs/functions.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/libs/functions.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/libs/functions.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/libs/functions.sh' with 0 args []
[DBG] status.loader        saving 'libs:functions' as loaded module
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/libs/environment.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/libs/environment.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/libs/environment.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/libs/environment.sh' with 0 args []
[DBG] status.loader        saving 'libs:environment' as loaded module
[DBG] success-cb.loader    found init function of 'libs:environment' with []
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/envs/.default'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/envs/.default'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/envs/.default'
[DBG] env.loader           export '2' variables [KCS_CMD_VERSION KCS_LOGLVL]
[DBG] add.hooks            adding '__kcs_environment_hook_clean' to hook name 'clean'
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/libs/configs.sh'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/libs/configs.sh'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/libs/configs.sh'
[DBG] source.loader        run '$KCS_PATH_SRC/libs/configs.sh' with 0 args []
[DBG] status.loader        saving 'libs:configs' as loaded module
[DBG] success-cb.loader    found init function of 'libs:configs' with []
[DBG] do.loader            skipping 'libs:functions' because it has been loaded
[DBG] add.hooks            adding '__kcs_configs_hook_clean' to hook name 'clean'
[DBG] init.lifecycle       initiate $_KCS_CMD_NAME variable to 'loggings'
[DBG] add.hooks            adding '__kcs_tmp_hook_setup' to hook name 'setup'
[DBG] add.hooks            adding '__kcs_loggings_hook_setup' with '@optional' to hook name 'setup'
[DBG] add.hooks            adding '__kcs_loggings_hook_load' with '@optional' to hook name 'pre_load'
[DBG] add.hooks            adding '__kcs_loggings_hook_main' with '@raw,@varargs' to hook name 'main'
[DBG] add.hooks            adding '__kcs_loggings_hook_clean' with '@optional' to hook name 'pre_clean'
[DBG] add.hooks            adding '__kcs_tmp_hook_clean' to hook name 'post_clean'
[DBG] add.hooks            adding '__kcs_log_hook_clean' to hook name 'post_clean'
[DBG] add.hooks            adding '__kcs_color_hook_clean' to hook name 'post_clean'
[DBG] success-cb.loader    found start function of 'private:lifecycle' with [loggings]
[DBG] runner.hooks         running hook name: 'setup' (2 callbacks)
[DBG] runner.hooks         using 'kcs_func_must' for '__kcs_tmp_hook_setup' callback
[DBG] do.loader            checking function name '__kcs_tmp_hook_setup'
[DBG] function.loader      run '__kcs_tmp_hook_setup' function with 0 args []
[DBG] runner.hooks         using 'kcs_func_optional' for '__kcs_loggings_hook_setup' callback
[DBG] do.loader            checking function name '__kcs_loggings_hook_setup'
[DBG] miss-cb.loader       missing 'func:__kcs_loggings_hook_setup'
[DBG] runner.hooks         running hook name: 'pre_load' (1 callbacks)
[DBG] runner.hooks         using 'kcs_func_optional' for '__kcs_loggings_hook_load' callback
[DBG] do.loader            checking function name '__kcs_loggings_hook_load'
[DBG] miss-cb.loader       missing 'func:__kcs_loggings_hook_load'
[DBG] runner.hooks         running hook name: 'load' (0 callbacks)
[DBG] runner.hooks         running hook name: 'pre_main' (0 callbacks)
[DBG] runner.hooks         running hook name: 'main' (1 callbacks)
[DBG] runner.hooks         using 'kcs_func_must' for '__kcs_loggings_hook_main' callback
[DBG] do.loader            checking function name '__kcs_loggings_hook_main'
[DBG] function.loader      run '__kcs_loggings_hook_main' function with 1 args [loggings.command]
[DBG] loggings.command     hello debug message
[INF] loggings.command     hello info message
[DBG] runner.hooks         running hook name: 'pre_clean' (1 callbacks)
[DBG] runner.hooks         using 'kcs_func_optional' for '__kcs_loggings_hook_clean' callback
[DBG] do.loader            checking function name '__kcs_loggings_hook_clean'
[DBG] miss-cb.loader       missing 'func:__kcs_loggings_hook_clean'
[DBG] runner.hooks         running hook name: 'clean' (2 callbacks)
[DBG] runner.hooks         using 'kcs_func_must' for '__kcs_environment_hook_clean' callback
[DBG] do.loader            checking function name '__kcs_environment_hook_clean'
[DBG] function.loader      run '__kcs_environment_hook_clean' function with 0 args []
[DBG] do.loader            [1st] trying '$KCT_PATH_TESTDIR/envs/.default'
[DBG] do.loader            [2nd] trying '$KCS_PATH_ROOT/envs/.default'
[DBG] do.loader            [3rd] trying '$KCS_PATH_SRC/envs/.default'
[DBG] unenv.loader         unset '2' variables [KCS_CMD_VERSION KCS_LOGLVL]
[DBG] runner.hooks         using 'kcs_func_must' for '__kcs_configs_hook_clean' callback
[DBG] do.loader            checking function name '__kcs_configs_hook_clean'
[DBG] function.loader      run '__kcs_configs_hook_clean' function with 0 args []
[DBG] runner.hooks         running hook name: 'post_clean' (3 callbacks)
[DBG] runner.hooks         using 'kcs_func_must' for '__kcs_tmp_hook_clean' callback
[DBG] do.loader            checking function name '__kcs_tmp_hook_clean'
[DBG] function.loader      run '__kcs_tmp_hook_clean' function with 0 args []
[DBG] runner.hooks         using 'kcs_func_must' for '__kcs_log_hook_clean' callback
[DBG] do.loader            checking function name '__kcs_log_hook_clean'
[DBG] function.loader      run '__kcs_log_hook_clean' function with 0 args []
